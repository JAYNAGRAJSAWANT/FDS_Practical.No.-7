# -*- coding: utf-8 -*-
"""code for searching final

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/14mzouQuDQe50Fu2rbA_EsIOXAqxeB95t
"""

"""(a) Write a Python Program to store roll numbers of student in array who attended training program in random order.
 Write a function for searching whether particular student attended  training program or not, using Linear Search and Sentinel Search
(b) Write a Python Program to store roll numbers of student in array who attended training program in sorted order.
 Write a function for searching whether particular student attended  training program or not, using Binary Search and Fibonacci Search
 """

def Linsearch(arr,key):     #for linear search
    for i in range(len(arr)):
        if arr[i] == key:
            return i

def Sentsearch(arr,key):     #for sentinel search
    l = len(arr)
    arr.append(key)
    i = 0
    while(arr[i]!=key):
        i = i+1
    if(i!=l):
        return i
    else:
       pass
def Binsearch(arr,key):    #for binary search
    low = 0
    high = len(arr)-1
    m = 0
    while(low<=high):
        s =int(low+high)//2	
        if(key<arr[s]):
            high = s-1
        elif(key>arr[s]):
            low = s+1
        else:
             return s              

# return the fibonacci number at the index of n
def FibonacciGenerator(n):    # n gives fibnocii no. at that index means n=index of that fibnocii no.
    if n < 1:
        return 0
    elif n == 1:
        return 1
    else:
        return FibonacciGenerator(n - 1) + FibonacciGenerator(n - 2)

# return the index at which x exists inside arr
# return -1 otherwise

def FibonacciSearch(arr, key):

    # find the smallest Fibonacci number greater than or equal
    # to the length of arr
    m = 0 
    while FibonacciGenerator(m) < len(arr):  
        m = m + 1 

    # [10, 22, 30, 44, 56, 58, 60, 70, 100, 110, 130] 
    # m = 7

    # m now contains the index of the the smallest Fibonacci
    # number greater than or equal to the length of the array
    # for example
    # if the length of arr is 11, FibonacciGenerator(m) should be 13

    # this is the length of that array from the
    # start that has been eliminated
    offset = -1

    # [10, 22, 30, 44, 56, 58, 60, 70, 100, 110, 130] 
    # m = 7
    # offset = -1

    # make sure you fibonacci index is valid
    while (FibonacciGenerator(m) > 1):

        i = min( offset + FibonacciGenerator(m - 2) , len(arr) - 1)

        # [10, 22, 30, 44, 56, 58, 60, 70, 100, 110, 130] 
        # m = 7 , 6  , 4 ,3
        # offset = -1 , 4 ,5
        # i = 4 ,7 ,5 ,6
        # key = 60

        if (key > arr[i]):

            m = m - 1
            offset = i

        elif (key < arr[i]):

            m = m - 2

        else:

            return i

    # this will run if there is one last element left
    if(FibonacciGenerator(m - 1) and arr[offset + 1] == key):
        return offset + 1

    # return -1 if the element doesn't exist in the array
    return -1
print("\nEnter number of students")
n = int(input())
arr = []
i=0
for i in range(n):
    print("\n Enter roll number of student %d: "%(i+1))
    item = int(input())
    arr.append(item)

print("The Roll Numbers of Students are \n")
print(arr)
while(True):
    print("\nSelect your choice")
    print("\n 1. Linear Search")
    print("\n 2. Sentinel Search")
    print("\n 3. Binary Search")
    print("\n 4. Fibnocii Search")
    print("\n 5. Exit")
    print("\n Enter your choice: ")
    choice = int(input())
    if(choice == 1):
        print("\n Enter the roll number you want to search  ")
        key = int(input())
        location = Linsearch(arr,key)
        if(location !=-1):
            print("\nYes, the student attended the program ")
        else:
            print("\nNo, the student has not attended the program ")
    elif(choice == 2):
        print("\n Enter the roll number you want to search  ")
        key = int(input())
        location = Sentsearch(arr,key)
        if(location !=-1):
            print("\nYes, the student attended the program")
        else:
            print("\nNo, the student has not attended the program")
    elif(choice == 3):
        print("\n Enter the roll number you want to search ")
        key = int(input())
        location = Binsearch(arr,key)
        if(location !=-1):
            print("\nYes, the student attended program")
        else:
            print("\nNo, the student has not attended program")
    elif(choice == 4):
        print("\n Enter the roll number you want to search ")
        key = int(input())
        location = FibonacciSearch(arr,key)
        if(location !=-1):
            print("\nYes, the student attended program")
        else:
            print("\nNo, the student has not attended program")       
    else :
        print("You are exitted");
        break